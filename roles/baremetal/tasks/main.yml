---
# NOTE(gyee): we'll only include the first one that matches. The rest will be ignored.
- name: Include OS family vars
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_os_family }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
    - "main.yml"

- name: Include OS distribution vars
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower | replace(' ', '_') }}.yml"
    - "{{ ansible_distribution | replace(' ', '_') }}.yml"
    - "main.yml"

- name: Include platform-specific common tasks
  include_tasks: "_{{ ansible_os_family | lower }}.yml"

- name: Checkout charts repo
  include_tasks: checkout_repo.yml
  vars:
    repo_dir: charts-repo-temp
    repo_url: "{{ baremetal_repo_url }}"
    repo_branch: "{{ baremetal_branch }}"
    repo_pull_request: "{{ baremetal_pull_request | default('') }}"

- name: Checkout sylva-core repo
  include_tasks: checkout_repo.yml
  vars:
    repo_dir: sylva-core
    repo_url: "{{ sylva_core_repo_url }}"
    repo_branch: "{{ sylva_core_branch }}"
    repo_pull_request: "{{ sylva_core_pull_request | default('') }}"
  when: deploy_sylva_core

- name: Checkout metal3-demo repo
  include_tasks: checkout_repo.yml
  vars:
    repo_dir: metal3-demo
    repo_url: "{{ metal3_demo_repo_url }}"
    repo_branch: "{{ metal3_demo_branch }}"
    repo_pull_request: "{{ metal3_demo_pull_request | default('') }}"
  when: deploy_sylva_core

- name: Create directories
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
    mode: 0775
  with_items: "{{ directories_to_create }}"

- name: Generate SSH keypair
  community.crypto.openssh_keypair:
    type: ed25519
    path: ~/.ssh/id_ed25519
    regenerate: always
  register: ssh_key_gen_result

- name: Set node_ssh_public_key fact
  set_fact:
    node_ssh_public_key: "{{ ssh_key_gen_result.public_key }}"

- name: Create metal3 overrides yaml file
  template:
    src: "parent-chart-overrides.yaml.j2"
    dest: "~/parent-chart-overrides.yaml"
  register: template_parent_overrides
  when: not deploy_sylva_core

- name: Deploy helm components using file based overrides
  shell: >-
    env HELM_EXPERIMENTAL_OCI=1 \
    helm upgrade --install heavy-metal metal3 \
      --create-namespace --namespace metal-cubed \
      --values ~/parent-chart-overrides.yaml \
      --atomic --timeout 30m
  args:
    chdir: ~/charts
  when: not deploy_sylva_core

- name: Create values.yaml for Sylva environment
  template:
    src: values.yaml.j2
    dest: ~/metal3-demo/sylva/environments/suse-rke2-capm3/values.yaml
  when: deploy_sylva_core

- name: Create workload_cluster_git_repo.yaml
  template:
    src: workload_cluster_git_repo.yaml.j2
    dest: ~/metal3-demo/sylva/environments/suse-rke2-capm3/workload_cluster_git_repo.yaml
  when: deploy_sylva_core

- name: Install Sylva python dependencies
  become: yes
  pip:
    name: [yamllint]
    state: latest
  when: deploy_sylva_core

- name: Increase timeout on Sylva install to prevent playbook from failing
  ansible.builtin.lineinfile:
    path: "~/sylva-core/apply.sh"
    regexp: '^\s*sylvactl watch ${MGMT_CLUSTER_KUBECONFIG} --reconcile --timeout 20m'
    line: 'sylvactl watch ${MGMT_CLUSTER_KUBECONFIG} --reconcile --timeout 45m'
  when: deploy_sylva_core

- name: Deploy sylva-core helm charts
  shell: >-
    ./apply.sh ~/metal3-demo/sylva/environments/suse-rke2-capm3
  args:
    chdir: ~/sylva-core
  register: sylva_core_deploy_result
  retries: 3
  delay: 30
  when: deploy_sylva_core

- name: Copy Get Component Version Script
  copy:
    src: get_component_versions.sh
    dest: ~/
    mode: 0777
