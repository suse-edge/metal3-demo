{% set resource_name = item.name | replace('_', '-') %}
{% set net_cidr = libvirt_networks[0].address_v4 + "/" + libvirt_networks[0].netmask_v4 %}
apiVersion: v1
kind: Secret
metadata:
  name: {{ resource_name }}-credentials
type: Opaque
data:
  username: {{ vbmc_username | b64encode }}
  password: {{ vbmc_password | b64encode }}
---
apiVersion: metal3.io/v1alpha1
kind: BareMetalHost
metadata:
  name: {{ resource_name }}
  labels:
    cluster-role: {{ libvirt_flavors[item.flavor].cluster_role  }}
spec:
  online: true
  bootMACAddress: "{{ node_mac_map.get(item.name).get(libvirt_networks[0].name) }}"
  bmc:
    address: redfish-virtualmedia://{{ vbmc_ip | ansible.utils.ipwrap }}:{{ vbmc_port }}/redfish/v1/Systems/{{vm_id[item.name]}}
    disableCertificateVerification: true
    credentialsName: {{ resource_name }}-credentials
{% if libvirt_network_dhcp|bool == false %}
  preprovisioningNetworkDataName: {{ resource_name }}-networkdata
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ resource_name }}-networkdata
type: Opaque
stringData:
  networkData: |
    interfaces:
    - name: enp1s0
      type: ethernet
      state: up
      ipv4:
        address:
        - ip:  "{{ node_ip_map.get(item.name).get(libvirt_networks[0].name) }}"
          prefix-length: "{{ net_cidr | ansible.utils.ipaddr('prefix') }}"
        enabled: true
        dhcp: false
    dns-resolver:
      config:
        server:
        - "{{external_network_bridge_ip}}"
    routes:
      config:
      - destination: 0.0.0.0/0
        next-hop-address: "{{external_network_bridge_ip}}"
        next-hop-interface: enp1s0
{% endif %}
