---
# NOTE(gyee): we'll only include the first one that matches. The rest will be ignored.
- name: Include OS family vars
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_os_family }}.yml"
    - "{{ ansible_os_family | lower }}.yml"
    - "main.yml"

- name: Include OS distribution vars
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower | replace(' ', '_') }}.yml"
    - "{{ ansible_distribution | replace(' ', '_') }}.yml"
    - "main.yml"

- name: Include platform-specific common tasks
  include_tasks: "_{{ ansible_os_family | lower }}.yml"

# NOTE: required by kubernetes.core.helm_repository
- name: Install Python yaml module
  become: yes
  pip:
    name: pyyaml
    state: present

############################################################################
# Per https://cert-manager.io/docs/installation/helm/#installing-with-helm #
############################################################################

- name: Add cert-manager helm repo
  kubernetes.core.helm_repository:
    repo_url: "{{ cert_manager_helm_repo_url }}"
    name: "{{ cert_manager_helm_repo_name }}"

- name: Deploy cert-manager helm chart
  kubernetes.core.helm:
    name: "{{ cert_manager_release }}"
    chart_ref: "{{ cert_manager_helm_chart_ref }}"
    state: present
    release_namespace: "{{ cert_manager_namespace }}"
    values:
      installCRDs: true
      extraArgs: "{{ 'extraArgs={--dns01-recursive-nameservers-only,--dns01-recursive-nameservers=8.8.8.8:53,1.1.1.1:53}' if dns_provider is defined and dns_provider == 'cloudflare' else '' }}"
    atomic: yes
    create_namespace: yes

- name: Wait for cert-manager to be rolled out
  shell: >
    kubectl -n {{ cert_manager_namespace }} rollout status deploy/{{ cert_manager_release }}
  register: cert_manager_rollout_result
  retries: 5
  delay: 10
  until: "'successfully rolled out' in cert_manager_rollout_result.stdout"
